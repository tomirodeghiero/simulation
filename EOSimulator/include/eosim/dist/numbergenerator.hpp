/*
	EOSimulator 1.1.1 - Event Oriented Simulator
	Copyright (C) 2006  Sebastián Alaggia, Bruno Martínez, Antonio Mauttone, Fernando Pardo, María Urquhart

	This library is free software; you can redistribute it and/or
	modify it under the terms of the GNU Lesser General Public
	License as published by the Free Software Foundation; either
	version 2.1 of the License, or (at your option) any later version.

	This library is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	Lesser General Public License for more details.

	You should have received a copy of the GNU Lesser General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
*/

#ifndef NUMBERGENERATOR_HPP_
#define NUMBERGENERATOR_HPP_


/** \ingroup dist_group
 * \@{
*/
/** \enum GenType
 *  \author Sebastián Alaggia
 *  \version 1.0.1
 *  \date    2005
 * \brief This enum defines labels for each generator suported by EOSimulator. 
 
 * <p>It is used for create generators for the distributions dynamically, so each distribution has it's own
 * generator. This enum defines a label for each type of number generator implemented in EOSimulator. In order
 * to add a new generator in EOSimulator, GenType has to be updated by adding a new label for the generator.</p>
*/

namespace eosim {
	
namespace dist {

    enum GenType {
		MT19937 /** Label for eosim::dist::Mt19937 */
	};

}

}
/**
 * \@}
*/

/** \ingroup dist_group
 * \@{
*/
/** \class eosim::dist::NumberGenerator include\eosim\dist\numbergenerator.hpp <eosim/dist/numbergenerator.hpp>
 *  \author Sebastián Alaggia
 *  \version 1.0.1
 *  \date    2005
 *  \brief  Random Number Generator Interface
 
 * <p>This is the interface for all random number generator in EOSimulator. They generate two kinds of numbers:
 * integer (NumberGenerator::nextLong) and uniform numbers in [0,1] (NumberGenerator::nextDouble).</p>
 * <p>NumberGenerators are not directly assigned to a distributions, they are assigned by the use of the label
 * GenType. This enum defines a label for each type of number generator implemented in EOSimulator. Then the label
 * is used by the NumberGeneratorFactory to create an specific number generator for a distribution.</p>
 * <p>In order to add a new generator in EOSimulator, GenType and NumberGeneratorFactory have to be updated.</p>
*/

namespace eosim {
	
namespace dist {

	class NumberGenerator {
	public:
		/**
		* \brief The constructor of NumberGenerator.
		*/
		NumberGenerator () {};
		/**
		* \brief The destructor of NumberGenerator.
		*/
		virtual ~NumberGenerator () {};
		/**
		* \brief This abstract operation assign seed to the generator’s seed.
		*/
		virtual void setSeed (const unsigned long seed) = 0;
		/**
		* \brief This abstract operation returns double between 0 and 1 generated by the generator.
		*/
		virtual double nextDouble () = 0;
		/**
		* \brief This abstract operation returns unsigned long generated by the generator.
		*/
		virtual unsigned long nextLong() = 0;
	};

}

}

/**
 * \@}
*/

#endif

